precision highp float;
varying vec2 v_texcoord;
uniform sampler2D tex;
uniform sampler2D pixelGridTex;

void main() {
	float distanceToCenter = distance(v_texcoord, vec2(0.5, 0.5));
	float curvature = pow(distanceToCenter, 12.0);

	vec2 distortedTexCoord = v_texcoord + curvature * (v_texcoord - vec2(0.5, 0.5));
	float vignetteFactor = smoothstep(1.0, 0.2, clamp(distanceToCenter, 0.2, 0.7));

	if (distortedTexCoord.x < 0.0 || distortedTexCoord.x > 1.0 || distortedTexCoord.y < 0.0 || distortedTexCoord.y > 1.0){
		gl_FragColor = vec4(0.0, 0.0, 0.0, 1.0);
	} else {
		float pixels = 8192.0;
		//float pixels = 4096.0;
		//float pixels = 2048.0;
		float dx = 13.0 * (1.0 / pixels);
		float dy = 12.0 * (1.0 / pixels);
		vec2 Coord = vec2(dx * floor(distortedTexCoord.x /dx),
											dy * floor(distortedTexCoord.y /dy));
		vec4 pixelGridColor = texture2D(pixelGridTex, Coord);
		float scanlineIntensity = sin(Coord.y * 20.0) * 0.2;

		vec4 baseColor = texture2D(tex, Coord) * pixelGridColor;
		vec4 blurredColor = texture2D(tex, gl_FragCoord.xy / Coord + 0.005);
		vec4 phosphorGlow = mix(baseColor, blurredColor, 0.3);

		vec4 pixColor = texture2D(tex, Coord);
		gl_FragColor = (phosphorGlow * (1.0 - scanlineIntensity)) * vignetteFactor;
	}
}
