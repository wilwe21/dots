.lclock {
	font-family: $clock-font;
	font-size: $clock-size;
	color: $clockcolor;
	text-shadow: $clockshadow;
	min-width: $clockwidth;
	min-height: $clockheight;
}
.wclock{
	@if $clock-background == 'solid' {
		background: $clock-bg-color;
	} @if $clock-background == 'linear-gradient' {
		background: linear-gradient($clock-bg-color);
	} @if $clock-background == 'repeating-linear-gradient' {
		background: repeating-linear-gradient($clock-bg-color);
	} @if $clock-background == 'radial-gradient' {
		background: radial-gradient($clock-bg-color);
	} @if $clock-background == 'repeating-radial-gradient' {
		background: repeating-radial-gradient($clock-bg-color);
	} @if $clock-background == 'image' {
		background: url($clock-bg-color);
    		background-size: $clock-bg-size;
		background-position: $clock-bg-pos;
    		background-repeat: $clock-bg-repe;
	} @if $clock-border == true {
		border: $border-width*1.5 solid $accent;
	}
	padding: $padding;
	border-radius: $radii*1.5;
}
.moonmain {
	font-size: 90px;
}
.wmoon {
	font-size: $moonsize;
}
.wbgtop {
	font-size: $bgtopsize;
}
.soundmain {
	@include unset;
	.soundbutt {
		all: unset;
	}
}
.bsound {
	font-size: $soundsize;
}
.mediawidget {
	border-radius: $radii*1.5;
	@if $music-box == 'solid' {
		background: $mb-color;
	} @if $music-box == 'linear-gradient' {
		background: linear-gradient($mb-color);
	} @if $music-box == 'repeating-linear-gradient' {
		background: repeating-linear-gradient($mb-color);
	} @if $music-box == 'radial-gradient' {
		background: radial-gradient($mb-color);
	} @if $music-box == 'repeating-radial-gradient' {
		background: repeating-radial-gradient($mb-color);
	} @if $music-box == 'image' {
		background: url($mb-color);
		background-size: $music-bg-size;
    		background-position: $music-bg-pos;
    		background-repeat: $music-bg-repe;
	}
	button {
		all: unset;
		padding: $padding/2;
		margin: 10px;
		font-size: 20px;
		color: $playcolor;
	}
	.volumelabel {
		color: $music-text-color;
		font-size: 1.1em;
		text-shadow: $text-shadow;
	}
	.vbox {
		min-width: 0px;
		padding: $padding*1.5;
	}
	.audioslider {
		@include spacing($rec: true);
		@include spacing(0);
		color: $accent;
		margin-top: -15px;
		min-height: $musicwidgetheight/1.3;
		slider {
			box-shadow: none;
			background-color: transparent;
			border: $border-width solid transparent;
			transition: $transition;
			border-radius: $radii*1.3;
		}
		slider:hover {
			background-color: $accent;
		}
		trough{
			margin-top: 15px;
			transition: $transition;
			border-radius: $radii;
			border: $border;
			background-color: $widget-bg;
			highlight, progress{
    				border-radius: max($radii - $border-width, 0);
    				background-image: $active-bgradient;
			}
		}
	}
	.buttonbox {
		padding: $padding/2;
		border-radius: $radii*1.5;
		@if $music-footer-box == 'solid' {
			background-color: $mfb-color;
		} @if $music-footer-box == 'gradient' {
			background-image: linear-gradient($mfb-color);
		}
		@if $music-footer-border == true {
			border: $border-width*1.5 solid $accent;
		}
	}
	@if $music-border == true {
		border: $border-width*1.5 solid $accent;
		border-radius: $radii*1.5;
	}
	.mpris-content{
		min-width: $musicwidgetwidth;
		min-height: $musicwidgetheight;
	}
	.labels {
		min-width: $musicwidgetwidth;
		min-height: $musicwidgetheight;
		padding: $padding;
		@if $music-text-box == 'solid'{
			background-color: $mtb-color;
			border-radius: $radii*1.5;
		} @if $music-text-box == 'gradient'{
			background-image: linear-gradient($mtb-color);
			border-radius: $radii*1.5;
		}
		@if $music-text-border == true {
			border: $border-width*1.5 solid $accent;
			border-radius: $radii*1.5;
		}
		color: $music-text-color;
		min-width: $musicwidgetwidth/2;
		margin-top: $padding;
		label {
			font-size: 1.1em;
			text-shadow: $text-shadow;
			&.title {
				font-weight: bold;
			}
		}
	}
	.position-slider {
		padding: $padding;
	}
	.position-label {
		padding: $padding;
	}	
	.cover {
		border-radius: $radii;
        	min-height: $coverheight;
        	min-width: $coverwidth;
        	box-shadow: 2px 2px 2px 0 $shadow;
        	margin: $padding;
        	.shader {
            		background-color: transparent;
			border-radius: $radii;
            		box-shadow: inset 0 0 0 0px transparentize($bg-color, 0.8);
           	}
    	}
    	.blurred-cover, .cover {
		background-size: cover;
		background-position: center;
		border-radius: $radii;
	}
	.blurred-cover {
		min-width: $musicwidgetwidth;
		min-height: $musicwidgetheight;
	}
}
